nextflow_pipeline {

    name "Pipeline end-to-end stub-run"
    script "main.nf"
    config "tests/main.stub.nf.test.config"
    options "-stub-run --create_stub_placeholders"

    test("WGTS GRCh38") {

        when {
            params {
                mode "wgts"
                genome "GRCh38_hmf"

                input "${baseDir}/tests/samplesheets/wgts.dna_rna.single.csv"
                outdir "${outputDir}"

                ref_data_virusbreakenddb_path "${workDir}/refdata/virusbreakenddb_20210401/"
                ref_data_hmf_data_path "${workDir}/refdata/hmf_data/"

                max_cpus = 1
                max_memory = "10.GB"

                // NOTE(SW): create new variable for nf-test workDir so that we can use in genomes config
                nfTestWorkDir = workDir
            }

        }

        then {
            assert workflow.success
        }

    }

    test("Targeted (TSO500) GRCh38") {

        when {
            params {
                mode "targeted"
                panel "tso500"
                genome "GRCh38_hmf"

                input "${baseDir}/tests/samplesheets/targeted.tso500.dna_rna.single.csv"
                outdir "${outputDir}"

                ref_data_hmf_data_path "${workDir}/refdata/hmf_data/"
                ref_data_panel_data_path "${workDir}/refdata/panel_data/"

                max_cpus 1
                max_memory "10.GB"

                // NOTE(SW): create new variable for nf-test workDir so that we can use in genomes config
                nfTestWorkDir = workDir
            }

        }

        then {
            assert workflow.success
        }

    }

}
